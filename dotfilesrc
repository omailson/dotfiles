# Silently quit if trying to source dotfiles twice
if [ -n "$DOTFILES_PATH" ]; then
	# In an interactive shell, use return if possible; otherwise, exit.
	return 0 2>/dev/null || exit 0
fi

############################
# Determine current shell  #
############################
if [ -n "$BASH_VERSION" ]; then
	# Bash: use $BASH_SOURCE for the current file.
	SOURCE="${BASH_SOURCE[0]}"
elif [ -n "$ZSH_VERSION" ]; then
	# Zsh: use ${(%):-%N} for the name of the current file.
	SOURCE="${(%):-%N}"
fi
export DOTFILES_PATH=$(dirname "$SOURCE")

# Add dotfiles/bin to path
export PATH="$DOTFILES_PATH"/bin:$PATH
export EDITOR="vim"

if [ -n "$BASH_VERSION" ]
then
	source "$DOTFILES_PATH/sources/history.bash"
	source "$DOTFILES_PATH/sources/prompt.bash"
	source "$DOTFILES_PATH/sources/aliases.bash"
	source "$DOTFILES_PATH/sources/funcoeszz.bash"
	source "$DOTFILES_PATH/sources/environment.bash"
	source "$DOTFILES_PATH/sources/venv.bash"
	source "$DOTFILES_PATH/sources/git-prompt.sh"
	source "$DOTFILES_PATH/sources/ask.sh"
	source "$DOTFILES_PATH/sources/witch.bash"
	source "$DOTFILES_PATH/sources/git-root.bash"
	source "$DOTFILES_PATH/sources/save_function.bash"
	source "$DOTFILES_PATH/sources/modules.bash"
	source "$DOTFILES_PATH/sources/completion.bash"
elif [ -n "$ZSH_VERSION" ]
then
	source "$DOTFILES_PATH/sources/history.zsh"
	source "$DOTFILES_PATH/sources/prompt.zsh"
	source "$DOTFILES_PATH/sources/aliases.bash"
	source "$DOTFILES_PATH/sources/environment.zsh"
	source "$DOTFILES_PATH/sources/venv.zsh"
	source "$DOTFILES_PATH/sources/git-prompt.sh"
	source "$DOTFILES_PATH/sources/ask.sh"
	source "$DOTFILES_PATH/sources/witch.zsh"
fi


# Optionally source a local configuration file.
if [ -f "$DOTFILES_PATH/local.zshrc" ]; then
	source "$DOTFILES_PATH/local.zshrc"
elif [ -f "$DOTFILES_PATH/local.bashrc" ]; then
	source "$DOTFILES_PATH/local.bashrc"
fi

# vim:ft=sh foldmethod=marker
